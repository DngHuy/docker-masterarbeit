services:

  # The 'setup' service runs a one-off script which initializes users inside
  # Elasticsearch — such as 'logstash_internal' and 'kibana_system' — with the
  # values of the passwords defined in the '.env' file. It also creates the
  # roles required by some of these users.
  #
  # This task only needs to be performed once, during the *initial* startup of
  # the stack. Any subsequent run will reset the passwords of existing users to
  # the values defined inside the '.env' file, and the built-in roles to their
  # default permissions.
  #
  # By default, it is excluded from the services started by 'docker compose up'
  # due to the non-default profile it belongs to. To run it, either provide the
  # '--profile setup' CLI flag to Compose commands, or "up" the service by name
  # such as 'docker compose up setup'.
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTICSEARCH_USERNAME: elastic
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch
    restart: unless-stopped

  sonar:
    platform: linux/amd64
    build:
      context: sonar/
      args:
        evaluationDate: 2024-03-25
    environment:
      SONAR_URL: ${SONAR_URL:-}
      SONAR_TOKEN: ${SONAR_TOKEN:-}
      SONAR_USER: ${SONAR_USER:-}
      SONAR_PASS: ${SONAR_PASS:-}
      SONAR_COMPONENT_KEYS: ${SONAR_COMPONENT_KEYS:-}
      SONAR_PROJECT_KEY: ${SONAR_PROJECT_KEY:-}
      SONAR_METRIC_KEYS: ${SONAR_METRIC_KEYS:-}
      SONAR_INTERVAL_SECONDS: ${SONAR_INTERVAL_SECONDS:-}
      ELASTICSEARCH_APIKEY: ${ELASTICSEARCH_APIKEY:-}
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP:-}
      ELASTICSEARCH_PORT: 9200
    restart: unless-stopped

  gitlab:
    platform: linux/amd64
    image: huydng/gitlab-service:latest
    environment:
      GITLAB_URL: ${GITLAB_URL:-}
      GITLAB_TOKEN: ${GITLAB_TOKEN:-}
      GITLAB_USERNAME: ${GITLAB_USERNAME:-}
      GITLAB_PASSWORD: ${GITLAB_PASSWORD:-}
      GITLAB_WEBHOOK: ${GITLAB_WEBHOOK:-}
      ELASTICSEARCH_APIKEY: ${ELASTICSEARCH_APIKEY:-}
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP:-}
      ELASTICSEARCH_PORT: 9200
    restart: unless-stopped
  
  github:
    platform: linux/amd64
    build:
      context: github/
    environment:
      GITHUB_INTERVAL: ${GITHUB_INTERVAL:-}
      QUARKUS_GITHUB_APP_APP_ID: ${QUARKUS_GITHUB_APP_APP_ID:-}
      QUARKUS_GITHUB_APP_INSTALLATION_ID: ${QUARKUS_GITHUB_APP_INSTALLATION_ID:-}
      QUARKUS_GITHUB_APP_APP_NAME:  ${QUARKUS_GITHUB_APP_APP_NAME:-}
      QUARKUS_GITHUB_APP_WEBHOOK_SECRET: ${QUARKUS_GITHUB_APP_WEBHOOK_SECRET:-}
      QUARKUS_GITHUB_APP_PRIVATE_KEY: ${QUARKUS_GITHUB_APP_PRIVATE_KEY:-}
    restart: unless-stopped
  
  jira:
    platform: linux/amd64
    image: huydng/jira-service:latest
    environment:
      JIRA_URL: ${JIRA_URL:-}
      JIRA_USER: ${JIRA_USER:-}
      JIRA_PASSWORD: ${JIRA_PASSWORD:-}
      JIRA_PROJECT: ${JIRA_PROJECT:-}
      JIRA_API_KEY: ${JIRA_API_KEY:-}
      JIRA_INTERVAL_SECONDS: ${JIRA_INTERVAL_SECONDS:-}
      ELASTICSEARCH_APIKEY: ${ELASTICSEARCH_APIKEY:-}
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP:-}
      ELASTICSEARCH_PORT: 9200
    restart: unless-stopped

  eval:
    platform: linux/amd64
    build:
      context: eval/
    #    command:
    #      - "evaluationDate 2024-03-25"
    environment:
      EVAL_INTERVAL: ${EVAL_INTERVAL:-}
      ELASTICSEARCH_APIKEY: ${ELASTICSEARCH_APIKEY:-}
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP:-}
      ELASTICSEARCH_PORT: 9200
    restart: unless-stopped

  sonarqube:
    image: sonarqube
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: ${SONAR_JDBC_PASSWORD:-}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

  postgresql:
    image: postgres:16.2-alpine3.18
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      POSTGRES_DB: ${POSTGRES_DB:-}
    ports:
      - "5432:5432"
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  elasticsearch:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
